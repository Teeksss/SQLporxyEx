# Enterprise SQL Proxy System - Production Environment
# Created: 2025-05-29 14:11:08 UTC by Teeksss
# Version: 2.0.0

# =============================================================================
# IMPORTANT: CHANGE ALL DEFAULT VALUES BEFORE PRODUCTION DEPLOYMENT
# =============================================================================

# Application Configuration
PROJECT_NAME="Enterprise SQL Proxy System"
VERSION="2.0.0"
ENVIRONMENT=production
DEBUG=false
DOMAIN=yourdomain.com

# Security Configuration (CHANGE THESE!)
SECRET_KEY=your-32-character-secret-key-here-change-this
JWT_SECRET_KEY=your-32-character-jwt-secret-key-here-change-this
ENCRYPTION_KEY=your-32-character-encryption-key-here-change-this

# Database Configuration
POSTGRES_SERVER=postgres
POSTGRES_USER=sql_proxy_user
POSTGRES_PASSWORD=your-secure-database-password-change-this
POSTGRES_DB=sql_proxy
POSTGRES_PORT=5432

# Redis Configuration
REDIS_URL=redis://:your-secure-redis-password@redis:6379/0
REDIS_PASSWORD=your-secure-redis-password-change-this

# Email Configuration (SMTP)
EMAILS_ENABLED=true
SMTP_TLS=true
SMTP_PORT=587
SMTP_HOST=smtp.yourdomain.com
SMTP_USER=noreply@yourdomain.com
SMTP_PASSWORD=your-smtp-password-change-this
SMTP_FROM_ADDRESS=noreply@yourdomain.com
SMTP_FROM_NAME="Enterprise SQL Proxy"

# Notification Configuration
NOTIFICATIONS_ENABLED=true
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK
TEAMS_WEBHOOK_URL=https://outlook.office.com/webhook/YOUR/TEAMS/WEBHOOK

# SSL/TLS Configuration
SSL_ENABLED=true
SSL_CERT_PATH=/etc/nginx/ssl/cert.pem
SSL_KEY_PATH=/etc/nginx/ssl/key.pem
SSL_CA_PATH=/etc/nginx/ssl/ca.pem

# LDAP Configuration (Optional)
LDAP_ENABLED=false
LDAP_SERVER=ldap.yourdomain.com
LDAP_PORT=389
LDAP_USE_SSL=false
LDAP_BASE_DN=dc=yourdomain,dc=com
LDAP_BIND_DN=cn=service,dc=yourdomain,dc=com
LDAP_BIND_PASSWORD=your-ldap-password-change-this
LDAP_USER_FILTER=(sAMAccountName={username})

# Rate Limiting
RATE_LIMIT_ENABLED=true
DEFAULT_RATE_LIMIT=100
RATE_LIMIT_STORAGE_URI=redis://:your-secure-redis-password@redis:6379/1

# Query Configuration
QUERY_TIMEOUT=300
MAX_RESULT_ROWS=10000
QUERY_APPROVAL_REQUIRED=true
QUERY_CACHE_TTL=3600
QUERY_HISTORY_RETENTION_DAYS=365
QUERY_ANALYSIS=true

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=30
BACKUP_COMPRESSION=true
BACKUP_ENCRYPTION=true
BACKUP_ENCRYPTION_KEY=your-32-character-backup-encryption-key-change-this

# AWS S3 Configuration (for backups)
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_S3_BUCKET=your-backup-bucket-name
AWS_REGION=us-east-1

# Monitoring Configuration
MONITORING_ENABLED=true
METRICS_ENABLED=true
PROMETHEUS_ENABLED=true
GRAFANA_ADMIN_PASSWORD=your-secure-grafana-password-change-this

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
AUDIT_LOG_ENABLED=true
AUDIT_RETENTION_DAYS=365

# Session Configuration
SESSION_TIMEOUT_MINUTES=480
MAX_CONCURRENT_SESSIONS=5
SESSION_SECURE=true

# Password Policy
PASSWORD_MIN_LENGTH=12
PASSWORD_REQUIRE_UPPERCASE=true
PASSWORD_REQUIRE_LOWERCASE=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_SYMBOLS=true
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION_MINUTES=30

# Performance Configuration
DB_POOL_SIZE=20
DB_POOL_MAX_OVERFLOW=30
REDIS_POOL_SIZE=20
MAX_CONCURRENT_QUERIES=100
WORKERS=4

# Feature Flags
ADVANCED_SECURITY=true
COMPLIANCE_MODE=true
GDPR_COMPLIANCE=true
SOX_COMPLIANCE=true
AUTO_DISCOVERY=true
WEBSOCKET_ENABLED=true
API_VERSIONING=true

# Frontend Configuration
REACT_APP_API_URL=https://api.yourdomain.com/api/v1
REACT_APP_WS_URL=wss://api.yourdomain.com/ws
REACT_APP_ENVIRONMENT=production

# Docker Configuration
COMPOSE_PROJECT_NAME=sql-proxy-prod
COMPOSE_FILE=docker-compose.prod.yml

# Network Configuration
BACKEND_CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
ALLOWED_HOSTS=yourdomain.com,www.yourdomain.com,api.yourdomain.com

# =============================================================================
# DEPLOYMENT INSTRUCTIONS:
# 
# 1. Copy this file to .env.production
# 2. Change ALL default passwords and secrets above
# 3. Configure your domain name
# 4. Set up SSL certificates
# 5. Configure SMTP settings
# 6. Run: docker-compose -f docker-compose.prod.yml up -d
# 7. Run: ./scripts/validate-system.sh to verify deployment
# 
# SECURITY CHECKLIST:
# [ ] All default passwords changed
# [ ] SSL certificates configured
# [ ] Firewall rules configured
# [ ] Database access restricted
# [ ] Backup encryption enabled
# [ ] Monitoring alerts configured
# [ ] LDAP configured (if applicable)
# [ ] Email notifications tested
# =============================================================================